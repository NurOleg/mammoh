<?php

declare(strict_types=1);

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        DB::statement("
CREATE TABLE `catalog_in_flange` (
  `id_in_flange` int(10) UNSIGNED NOT NULL,
  `name_in_flange` varchar(10) NOT NULL DEFAULT '',
  `size_in_flange` varchar(10) NOT NULL DEFAULT '',
  `type_in_flange` varchar(10) NOT NULL DEFAULT '',
  `name_in_flange_analog` varchar(10) NOT NULL DEFAULT '',
  `weight_in_flange` decimal(12,2) NOT NULL DEFAULT '0.00',
  `dim_D4_in_flange` varchar(10) NOT NULL DEFAULT '',
  `dim_D5_in_flange` varchar(10) NOT NULL DEFAULT '',
  `dim_D6_in_flange` varchar(10) NOT NULL DEFAULT '',
  `dim_D7_in_flange` varchar(10) NOT NULL DEFAULT ''
);
        ");

        DB::statement("
        INSERT INTO `catalog_in_flange` (`id_in_flange`, `name_in_flange`, `size_in_flange`, `type_in_flange`, `name_in_flange_analog`, `weight_in_flange`, `dim_D4_in_flange`, `dim_D5_in_flange`, `dim_D6_in_flange`, `dim_D7_in_flange`) VALUES
(1, '56IM3081', '56', 'IM3081', '63IMB5', '0.00', '95', '115', '140', '8,5'),
(2, '63IM3081', '63', 'IM3081', '71IMB5', '0.00', '110', '130', '160', '8,5'),
(3, '71IM3081', '71', 'IM3081', '80IMB5', '0.00', '130', '165', '200', '11'),
(4, '80IM3081', '80', 'IM3081', '90IMB5', '0.00', '130', '165', '200', '11'),
(5, '90IM3081', '90', 'IM3081', '100IMB5', '0.00', '180', '215', '250', '12'),
(6, '100IM3081', '100', 'IM3081', '112IMB5', '0.00', '180', '215', '250', '12'),
(7, '112IM3081', '112', 'IM3081', '132IMB5', '0.00', '230', '265', '300', '12'),
(8, '132IM3081', '132', 'IM3081', '160IMB5', '0.00', '250', '300', '350', '16'),
(9, '160IM3081', '160', 'IM3081', '180IMB5', '0.00', '250', '300', '350', '16'),
(10, '180IM3081', '180', 'IM3081', '200IMB5', '0.00', '300', '350', '400', '19'),
(11, '200IM3081', '200', 'IM3081', '225IMB5', '0.00', '350', '400', '450', '19'),
(12, '50IM3081', '50', 'IM3081', '56IMB5', '0.00', '80', '100', '120', '6,5'),
(13, '225IM3081', '225', 'IM3081', '250IMB5', '0.00', '450', '500', '550', '19'),
(14, '250IM3081', '250', 'IM3081', '280IMB5', '0.00', '450', '500', '550', '19'),
(15, '280IM3081', '280', 'IM3081', '315IMB5', '0.00', '550', '600', '660', '24'),
(16, '63IMB5', '63', 'IMB5', '56IM3081', '0.00', '95', '115', '140', '8,5'),
(17, '71IMB5', '71', 'IMB5', '63IM3081', '0.00', '110', '130', '160', '8,5'),
(18, '80IMB5', '80', 'IMB5', '71IM3081', '0.00', '130', '165', '200', '11'),
(19, '90IMB5', '90', 'IMB5', '80IM3081', '0.00', '130', '165', '200', '11'),
(20, '100IMB5', '100', 'IMB5', '90IM3081', '0.00', '180', '215', '250', '12'),
(21, '112IMB5', '100', 'IMB5', '90IM3081', '0.00', '180', '215', '250', '12'),
(22, '132IMB5', '132', 'IMB5', '112IM3081', '0.00', '230', '265', '300', '12'),
(23, '160IMB5', '160', 'IMB5', '132IM3081', '0.00', '250', '300', '350', '16'),
(24, '180IMB5', '180', 'IMB5', '160IM3081', '0.00', '250', '300', '350', '16'),
(25, '200IMB5', '200', 'IMB5', '180IM3081', '0.00', '300', '350', '400', '19'),
(26, '225IMB5', '225', 'IMB5', '200IM3081', '0.00', '350', '400', '450', '19'),
(27, '56IMB5', '56', 'IMB5', '50IM3081', '0.00', '80', '100', '120', '6,5'),
(28, '250IMB5', '250', 'IMB5', '225IM3081', '0.00', '450', '500', '550', '19'),
(29, '280IMB5', '280', 'IMB5', '250IM3081', '0.00', '450', '500', '550', '19'),
(30, '315IMB5', '315', 'IMB5', '280IM3081', '0.00', '550', '600', '660', '24'),
(31, '56IMB14', '56', 'IMB14', '56IM2181', '0.00', '50', '65', '80', '6,5'),
(32, '63IMB14', '63', 'IMB14', '63IM2181', '0.00', '60', '75', '90', '8,5'),
(33, '71IMB14', '71', 'IMB14', '71IM2181', '0.00', '70', '85', '105', '8,5'),
(34, '80IMB14', '80', 'IMB14', '80IM2181', '0.00', '80', '100', '120', '11'),
(35, '90IMB14', '90', 'IMB14', '90IM2181', '0.00', '95', '115', '140', '11'),
(36, 'n-30-7,5', 'n', 'n', '', '0.00', '', '', '', ''),
(37, 'n-30-10', 'n', 'n', '', '0.00', '', '', '', ''),
(38, 'n-30-15', 'n', 'n', '', '0.00', '', '', '', ''),
(39, 'n-30-20', 'n', 'n', '', '0.00', '', '', '', ''),
(40, 'n-30-25', 'n', 'n', '', '0.00', '', '', '', ''),
(41, 'n-30-30', 'n', 'n', '', '0.00', '', '', '', ''),
(42, 'n-30-40', 'n', 'n', '', '0.00', '', '', '', ''),
(43, 'n-30-50', 'n', 'n', '', '0.00', '', '', '', ''),
(44, 'n-30-60', 'n', 'n', '', '0.00', '', '', '', ''),
(45, 'n-30-80', 'n', 'n', '', '0.00', '', '', '', ''),
(46, 'n-40-7,5', 'n', 'n', '', '0.00', '', '', '', ''),
(47, 'n-40-10', 'n', 'n', '', '0.00', '', '', '', ''),
(48, 'n-40-15', 'n', 'n', '', '0.00', '', '', '', ''),
(49, 'n-40-20', 'n', 'n', '', '0.00', '', '', '', ''),
(50, 'n-40-25', 'n', 'n', '', '0.00', '', '', '', ''),
(51, 'n-40-30', 'n', 'n', '', '0.00', '', '', '', ''),
(52, 'n-40-40', 'n', 'n', '', '0.00', '', '', '', ''),
(53, 'n-40-50', 'n', 'n', '', '0.00', '', '', '', ''),
(54, 'n-40-60', 'n', 'n', '', '0.00', '', '', '', ''),
(55, 'n-40-80', 'n', 'n', '', '0.00', '', '', '', ''),
(56, 'n-40-100', 'n', 'n', '', '0.00', '', '', '', ''),
(57, 'n-50-7,5', 'n', 'n', '', '0.00', '', '', '', ''),
(58, 'n-50-10', 'n', 'n', '', '0.00', '', '', '', ''),
(59, 'n-50-15', 'n', 'n', '', '0.00', '', '', '', ''),
(60, 'n-50-20', 'n', 'n', '', '0.00', '', '', '', ''),
(61, 'n-50-25', 'n', 'n', '', '0.00', '', '', '', ''),
(62, 'n-50-30', 'n', 'n', '', '0.00', '', '', '', ''),
(63, 'n-50-40', 'n', 'n', '', '0.00', '', '', '', ''),
(64, 'n-50-50', 'n', 'n', '', '0.00', '', '', '', ''),
(65, 'n-50-60', 'n', 'n', '', '0.00', '', '', '', ''),
(66, 'n-50-80', 'n', 'n', '', '0.00', '', '', '', ''),
(67, 'n-50-100', 'n', 'n', '', '0.00', '', '', '', ''),
(68, 'n-63-7,5', 'n', 'n', '', '0.00', '', '', '', ''),
(69, 'n-63-10', 'n', 'n', '', '0.00', '', '', '', ''),
(70, 'n-63-15', 'n', 'n', '', '0.00', '', '', '', ''),
(71, 'n-63-20', 'n', 'n', '', '0.00', '', '', '', ''),
(72, 'n-63-25', 'n', 'n', '', '0.00', '', '', '', ''),
(73, 'n-63-30', 'n', 'n', '', '0.00', '', '', '', ''),
(74, 'n-63-40', 'n', 'n', '', '0.00', '', '', '', ''),
(75, 'n-63-50', 'n', 'n', '', '0.00', '', '', '', ''),
(76, 'n-63-60', 'n', 'n', '', '0.00', '', '', '', ''),
(77, 'n-63-80', 'n', 'n', '', '0.00', '', '', '', ''),
(78, 'n-63-100', 'n', 'n', '', '0.00', '', '', '', ''),
(79, 'n-75-7,5', 'n', 'n', '', '0.00', '', '', '', ''),
(80, 'n-75-10', 'n', 'n', '', '0.00', '', '', '', ''),
(81, 'n-75-15', 'n', 'n', '', '0.00', '', '', '', ''),
(82, 'n-75-20', 'n', 'n', '', '0.00', '', '', '', ''),
(83, 'n-75-25', 'n', 'n', '', '0.00', '', '', '', ''),
(84, 'n-75-30', 'n', 'n', '', '0.00', '', '', '', ''),
(85, 'n-75-40', 'n', 'n', '', '0.00', '', '', '', ''),
(86, 'n-75-50', 'n', 'n', '', '0.00', '', '', '', ''),
(87, 'n-75-60', 'n', 'n', '', '0.00', '', '', '', ''),
(88, 'n-75-80', 'n', 'n', '', '0.00', '', '', '', ''),
(89, 'n-75-100', 'n', 'n', '', '0.00', '', '', '', ''),
(90, 'n-90-7,5', 'n', 'n', '', '0.00', '', '', '', ''),
(91, 'n-90-10', 'n', 'n', '', '0.00', '', '', '', ''),
(92, 'n-90-15', 'n', 'n', '', '0.00', '', '', '', ''),
(93, 'n-90-20', 'n', 'n', '', '0.00', '', '', '', ''),
(94, 'n-90-25', 'n', 'n', '', '0.00', '', '', '', ''),
(95, 'n-90-30', 'n', 'n', '', '0.00', '', '', '', ''),
(96, 'n-90-40', 'n', 'n', '', '0.00', '', '', '', ''),
(97, 'n-90-50', 'n', 'n', '', '0.00', '', '', '', ''),
(98, 'n-90-60', 'n', 'n', '', '0.00', '', '', '', ''),
(99, 'n-90-80', 'n', 'n', '', '0.00', '', '', '', ''),
(100, 'n-90-100', 'n', 'n', '', '0.00', '', '', '', ''),
(101, 'n-110-7,5', 'n', 'n', '', '0.00', '', '', '', ''),
(102, 'n-110-10', 'n', 'n', '', '0.00', '', '', '', ''),
(103, 'n-110-15', 'n', 'n', '', '0.00', '', '', '', ''),
(104, 'n-110-20', 'n', 'n', '', '0.00', '', '', '', ''),
(105, 'n-110-25', 'n', 'n', '', '0.00', '', '', '', ''),
(106, 'n-110-30', 'n', 'n', '', '0.00', '', '', '', ''),
(107, 'n-110-40', 'n', 'n', '', '0.00', '', '', '', ''),
(108, 'n-110-50', 'n', 'n', '', '0.00', '', '', '', ''),
(109, 'n-110-60', 'n', 'n', '', '0.00', '', '', '', ''),
(110, 'n-110-80', 'n', 'n', '', '0.00', '', '', '', ''),
(111, 'n-110-100', 'n', 'n', '', '0.00', '', '', '', ''),
(112, 'n-130-7,5', 'n', 'n', '', '0.00', '', '', '', ''),
(113, 'n-130-10', 'n', 'n', '', '0.00', '', '', '', ''),
(114, 'n-130-15', 'n', 'n', '', '0.00', '', '', '', ''),
(115, 'n-130-20', 'n', 'n', '', '0.00', '', '', '', ''),
(116, 'n-130-25', 'n', 'n', '', '0.00', '', '', '', ''),
(117, 'n-130-30', 'n', 'n', '', '0.00', '', '', '', ''),
(118, 'n-130-40', 'n', 'n', '', '0.00', '', '', '', ''),
(119, 'n-130-50', 'n', 'n', '', '0.00', '', '', '', ''),
(120, 'n-130-60', 'n', 'n', '', '0.00', '', '', '', ''),
(121, 'n-130-80', 'n', 'n', '', '0.00', '', '', '', ''),
(122, 'n-130-100', 'n', 'n', '', '0.00', '', '', '', ''),
(123, 'n-150-7,5', 'n', 'n', '', '0.00', '', '', '', ''),
(124, 'n-150-10', 'n', 'n', '', '0.00', '', '', '', ''),
(125, 'n-150-15', 'n', 'n', '', '0.00', '', '', '', ''),
(126, 'n-150-20', 'n', 'n', '', '0.00', '', '', '', ''),
(127, 'n-150-25', 'n', 'n', '', '0.00', '', '', '', ''),
(128, 'n-150-30', 'n', 'n', '', '0.00', '', '', '', ''),
(129, 'n-150-40', 'n', 'n', '', '0.00', '', '', '', ''),
(130, 'n-150-50', 'n', 'n', '', '0.00', '', '', '', ''),
(131, 'n-150-60', 'n', 'n', '', '0.00', '', '', '', ''),
(132, 'n-150-80', 'n', 'n', '', '0.00', '', '', '', ''),
(133, 'n-150-100', 'n', 'n', '', '0.00', '', '', '', ''),
(134, '100IMB14', '100', 'IMB14', '100IM2181', '0.00', '110', '130', '160', '12'),
(135, '112IMB14', '112', 'IMB14', '112IM2181', '0.00', '110', '130', '160', '12'),
(136, '56IM2181', '56', 'IM2181', '56IMB14', '0.00', '50', '65', '80', '6,5'),
(137, '63IM2181', '63', 'IM2181', '63IMB14', '0.00', '60', '75', '90', '8,5'),
(138, '71IM2181', '71', 'IM2181', '71IMB14', '0.00', '70', '85', '105', '8,5'),
(139, '80IM2181', '80', 'IM2181', '80IMB14', '0.00', '80', '100', '120', '11'),
(140, '90IM2181', '90', 'IM2181', '90IMB14', '0.00', '95', '115', '140', '11'),
(141, '100IM2181', '100', 'IM2181', '100IMB14', '0.00', '110', '130', '160', '12'),
(142, '112IM2181', '112', 'IM2181', '112IMB14', '0.00', '110', '130', '160', '12');
        ");
    }

    public function down(): void
    {
        Schema::dropIfExists('catalog_in_flange');
    }
};
